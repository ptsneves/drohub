video.video-player {
    width: 100%;
    border-radius: 4px;
}

button.video-player-button {
    vertical-align: middle;
    border: none;
    margin: 0;
    padding: 0;
    text-decoration: none;
    background: transparent;
    color: #ffffff;
    fill: white;
    font-family: sans-serif;
    font-size: 16px;
    line-height: 24px;
    cursor: pointer;
    text-align: center;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 24px;
    height: 24px;
}

.video-player-overlay {
    position: absolute;
    width: 94%;
    height: 100%;
    z-index: 1;
    color: white;
    font-size: 16px;
    margin:auto;
    text-align: center;
    left: 0;
    right: 0;
}

.video-player-left {
    float: left;
}

.video-player-right {
    float: right;
}

.video-player-bottom {
    position: absolute;
    bottom: 5%;
    width: 100%;
}

.video-player-top {
    position: absolute;
    top: 5%;
    width: 100%;
}

.video-player-progressbar{
    /* border */
    border-radius: 20px;
    /* initial size */
    height: 20px;
    width: 0;
}

.video-player-inner{
    position: relative;
    display: inline-block;
}

@media (hover: hover) {
    .video-player-controls {
        opacity: 0;
        filter: alpha(opacity=0);
        -webkit-transition: all 400ms ease-in-out;
        -moz-transition: all 400ms ease-in-out;
        -ms-transition: all 400ms ease-in-out;
        -o-transition: all 400ms ease-in-out;
    }

    .video-player-container:hover .video-player-controls,
    .video-player-container:active .video-player-controls,
    .video-player-container:focus .video-player-controls {
        opacity: 100%;
        filter: alpha(opacity=100);
    }
}



.video-player-container {
    z-index: 1;
    color: white;
    --thumb-height: 10px;
    --track-height: 4px;
    vertical-align: middle;
    box-sizing: border-box;
    background-color: transparent;
    min-height: 24px;
    font-size: 16px;
    line-height: 24px;
    padding: 0 10px
}


:hover + .video-player-container {
    background: rgba(255,255,255, 0.10);
}
input[type=range] {
    /* Reset */
    -webkit-appearance: none; /* Hides the slider so that custom slider can be made */
    background: transparent; /* Otherwise white in Chrome */
    /* Fill host with the range */
    height: 100%;
    width: 100%; /* Specific width is required for Firefox. */
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}
/* Special styling for WebKit/Blink */
input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: var(--thumb-height);
    width: 10px;
    border: none;
    border-radius: 10px;
    background: #fff;
    box-shadow: 1px 1px 1px transparent;
    cursor: pointer;
        /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */
    margin-top: calc(calc(0px - var(--thumb-height) + var(--track-height)) / 2);
    transition: margin .2s ease;
}
input[type=range]::-moz-range-thumb {
    height: var(--thumb-height);
    width: 10px;
    border: none;
    border-radius: 10px;
    background: #fff;
    box-shadow: 1px 1px 1px transparent;
    cursor: pointer;
}
input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    min-width: 40px;
    height: var(--track-height);
    border: none;
    border-radius: 0;
    background: #eee;
    box-shadow: none;
    transition: none;
    cursor: pointer;
}
input[type=range]::-moz-range-track {
    width: 100%;
    min-width: 40px;
    height: var(--track-height);
    border: none;
    border-radius: 0;
    background: #eee;
    box-shadow: none;
    transition: none;
    cursor: pointer;
}
input[type=range]::-ms-track {
    /* Reset */
    width: 100%;
    cursor: pointer;
    /* Hides the slider so custom styles can be added */
    color: transparent;
    min-width: 40px;
    height: var(--track-height);
    border: none transparent;
    border-radius: 0;
    background: #eee;
    box-shadow: none;
    transition: none;
}
/* Eventually want to move towards different styles for focus-visible
   https://github.com/WICG/focus-visible/blob/master/src/focus-visible.js
   Youtube appears to do this by de-focusing a button after a button click */
input[type=range]:focus {
    outline: 0;
}
input[type=range]:focus::-webkit-slider-runnable-track {
    outline: 0;
}
input[type=range]:disabled::-webkit-slider-thumb {
    background-color: #777;
}
input[type=range]:disabled::-webkit-slider-runnable-track {
    background-color: #777;
}